chatgpt - https://chat.openai.com/share/c740bbf5-ed50-4379-9ef9-aa083b1c0b9f
blackbox - https://www.blackbox.ai/share/1e632a7f-0a4f-4f63-80fa-ae1434fffd6a

Для експерименту з оптимізації ми вибрали IMDB з першого семестру. У цьому завданні треба закодити 2 функції.
Ми вирішили перевірити ефективність оптимізації коду за допомогою ChatGPT та BlackBox.ai, а саме: порівняти кількість 
рядків, швидкість виконання та затрати пам'яті коду, згенерованого ШІ, із оригінальним кодом.

Дана задача не є занадто простою, але і не є складною. Дозволяє перевірити характеристики виконання коду при великій кількості даних

--- Загальний висновок ---
ChatGPT найкраще справляється з оптимізацією коду. BlackBox також дає хороші результати, хоча й гірші, ніж у Чату.
Результати тестів та сам код можна побачити в інших файлах папки та на скріншотах.

- Швидкість виконання коду. Порівняно з оригінальним кодом швидкість виконання коду оптимізованого ШІ значно підвищилась, що добре.
- Об'єм пам'яті. Якщо говорити про ChatGPT, то його результати доволі хороші для першого тесту. Він зміг зменшити використання байт
на 100-200 під час першого тесту. Якщо говорити про Blackbox, то він навпаки дав гірші результати.
Під час тестування на великій кількості даних (тест 2) ЧатГПТ майже не покращив використання пам'яті. Blackbox навпаки дав гірші результати,
ніж оригінальний код.
- Якість коду. Обидві оптимізації хороші. Код скорочений, виглядає читабильно. PEP8 дотримано.


1. Об'єм коду та складність ідеї мають важливе значення для генерації результатів. IMDB має певну специфіку, через яку, на нашу думку,
ШІ не так легко справляється з оптимізацією. У цій задачі друга
функція залежить від результатів першої,тому оптимізовувати код частинами в даній ситуації неефективно.
Звідси маємо те, що спочатку обидва штучні інтелекти не давали правильного результату. Однак після того, як ми змінили промпт (про це у наступному
пункті), ми отримали бажаний вивід. Загалом код скоротився навіть попри невеликі об'єми оригінального. Також слід зазначити, що
навіть, якщо ідея не є проста, то хороше і докладне пояснення дають змогу ШІ згенерувати правильні результати з перших спроб. Тут так і вийшло.

2. Промпт має вплив на результат. Спочатку ми спробували закинути повністю лише код з проханням оптимізувати його.
Або намагалися закинути код частинами.
Однак ні ЧатГПТ, ні БлекБокс не змогли з першого разу згенерувати код без помилок у результаті.
Можливо, це пов'язано зі специфікою завдання, адже у ньому друга
функція залежить від результатів першої,тому оптимізовувати код частинами в даній ситуації неефективно.
Далі заново спробували закинути увесь оригінальний код, але крім того й 
умову задачі із CMS. Це дало доволі хороші результати: з першого разу код запрацював належним чином і в ChatGPT, і в BlackBox.  
Стандарт PEP8 обидва ШІ дотримались. Можливо тому, що здійснили невеликі зміни.

3. У випадку цієї задачі використовувати ШІ точково було неефективно, адже в оригінальному коді друга функція
залежала від результатів першої. Однак закидання коду повністю та з умовою з CMS дало результати. Chatgpt застосував бібліотеку
collections, а саме defaultdict, чим зміг скоротити код. Також вирішив деякі місця коду звести до одного рядка.
BlackBox вчинив подібним чином, однак без імпортування бібліотек. Він використав dict comprehension. Це також скоротило код і зробило
його більш ефективним.
Загалом ШІ може допомогти у виявленні та усуненні вузьких місць у коді. Наприклад, у цій задачі він скоротив використання пам'яті та час виконання
коду. Також скоротив його та в деяких місцях застосував словники.

4. З оформленням проблем не виникало. ChatGPT і BlackBox давали результати з дотриманням pep8. Якщо попросити ШІ допомогти з оформленням коду,
то він дає задовільні результати, але не завжди. Навіть, якщо попросити декілька разів.
